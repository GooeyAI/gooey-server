# Generated by Django 4.2.7 on 2024-03-21 12:53

import re
import uuid

from django.core.exceptions import ValidationError
from django.db import migrations, models, IntegrityError
import django.db.models.deletion

from loguru import logger


def make_handle_from(text):
    text = text.lower()
    text = re.sub(r"[^a-z0-9_.-]", " ", text)
    text = re.sub("\s+", "-", text)
    text = text.strip("-")
    return text


def attempt_create_handle(Handle, handle_name):
    handle = Handle(name=handle_name)
    try:
        # handle.save() also runs the validators
        handle.save()
        return handle
    except (IntegrityError, ValidationError):
        return None


def forwards_func(apps, schema_editor):
    AppUser = apps.get_model("app_users", "AppUser")
    Handle = apps.get_model("handles", "Handle")

    registered_users = AppUser.objects.filter(
        handle__isnull=True,
        is_anonymous=False,
        email__isnull=False,
    )

    for user in registered_users.iterator(chunk_size=500):
        if not user.email:
            continue

        email_prefix = user.email.split("@")[0]
        handle_name = make_handle_from(email_prefix)
        if not handle_name:
            handle_name = "user"

        handle = attempt_create_handle(Handle, handle_name)
        if handle is None:
            # first fallback
            handle_name = f"{handle_name}-{user.uid[:4]}"
            handle = attempt_create_handle(Handle, handle_name)
        if handle is None:
            # second fallback
            handle_name = f"{handle_name}-{(uuid.uuid4().hex)[:4]}"
            handle = attempt_create_handle(Handle, handle_name)
        if handle is None:
            # nothing worked - continue with the rest
            logger.warning(f"Failed to create handle for user {user.uid} - skipping")
            continue

        user.handle = handle
        user.save()


class Migration(migrations.Migration):

    dependencies = [
        ('handles', '0001_initial'),
        ('app_users', '0013_appusertransaction_app_users_a_user_id_9b2e8d_idx_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='appuser',
            name='handle',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='handles.handle'),
        ),
        migrations.RunPython(forwards_func, reverse_code=migrations.RunPython.noop)
    ]
