# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  repository: 'myDockerImage'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Test
  jobs:
  - job: Test
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Cache@2
      displayName: Cache task
      inputs:
        key: 'docker | "$(Agent.OS)" | cache'
        path: $(Pipeline.Workspace)/docker
        cacheHitVar: CACHE_RESTORED                #Variable to set to 'true' when the cache is restored
    - script: |
        docker load -i $(Pipeline.Workspace)/docker/cache.tar
      displayName: Docker restore
      condition: and(not(canceled()), eq(variables.CACHE_RESTORED, 'true'))    
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - script: |
        mkdir -p $(Pipeline.Workspace)/docker
        docker save -o $(Pipeline.Workspace)/docker/cache.tar $(repository):$(tag)
      displayName: Docker save
      condition: and(not(canceled()), not(failed()), ne(variables.CACHE_RESTORED, 'true'))
  
    - script: |
        docker run $(tag) poetry run pytest
