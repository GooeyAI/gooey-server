# Generated by Django 4.2.7 on 2024-07-18 10:18

from django.db import migrations, models
import django.db.models.deletion
import orgs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_users', '0019_alter_appusertransaction_reason'),
    ]

    operations = [
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('org_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('logo', models.URLField(blank=True, null=True)),
                ('domain_name', models.CharField(blank=True, max_length=30, null=True, validators=[orgs.models.validate_org_domain_name])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_users.appuser')),
            ],
        ),
        migrations.CreateModel(
            name='OrgInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('invitee_email', models.EmailField(max_length=254)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Accepted'), (3, 'Rejected'), (4, 'Canceled')], default=1)),
                ('auto_accepted', models.BooleanField(default=False)),
                ('role', models.IntegerField(choices=[(1, 'Owner'), (2, 'Admin'), (3, 'Member')], default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_users.appuser')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='orgs.org')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrgMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('role', models.IntegerField(choices=[(1, 'Owner'), (2, 'Admin'), (3, 'Member')], default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invitation', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membership', to='orgs.orginvitation')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='orgs.org')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_memberships', to='app_users.appuser')),
            ],
            options={
                'unique_together': {('org', 'user', 'deleted')},
            },
        ),
        migrations.AddField(
            model_name='org',
            name='members',
            field=models.ManyToManyField(related_name='orgs', through='orgs.OrgMembership', to='app_users.appuser'),
        ),
        migrations.AlterUniqueTogether(
            name='org',
            unique_together={('domain_name', 'deleted')},
        ),
    ]
