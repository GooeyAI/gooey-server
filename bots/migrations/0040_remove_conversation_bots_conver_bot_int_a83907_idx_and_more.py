# Generated by Django 4.2.3 on 2023-09-19 09:00

from django.db import migrations, models
from django.db.models import Q

from bots.models import Platform


def forwards_func(apps, schema_editor):
    Conversation = apps.get_model("bots", "Conversation")
    BotIntegration = apps.get_model("bots", "BotIntegration")
    db_alias = schema_editor.connection.alias

    # for backwards compatibility, we have to get the team id from the channel hook url
    for bi in (
        BotIntegration.objects.using(db_alias)
        .filter(
            platform=Platform.SLACK,
        )
        .exclude(
            slack_channel_hook_url="",
        )
    ):
        bi.slack_team_id = (
            bi.slack_team_id
            or bi.slack_channel_hook_url.removeprefix(
                "https://hooks.slack.com/services/"
            ).split("/")[0]
        )
        bi.save()

    for conv in Conversation.objects.using(db_alias).all():
        bi = conv.bot_integration
        if bi.platform == Platform.SLACK:
            conv.slack_team_id = conv.slack_team_id or bi.slack_team_id
            conv.slack_channel_id = conv.slack_channel_id or bi.slack_channel_id
            conv.save()

    qs = Conversation.objects.using(db_alias).filter(
        Q(slack_channel_id="") | Q(slack_user_id="") | Q(slack_team_id="")
    )
    for convo in qs:
        convo.slack_user_id = convo.slack_user_id or None
        convo.save()


def backwards_func(apps, schema_editor):
    Conversation = apps.get_model("bots", "Conversation")
    db_alias = schema_editor.connection.alias

    qs = Conversation.objects.using(db_alias).filter(
        Q(slack_channel_id=None) | Q(slack_user_id=None) | Q(slack_team_id=None)
    )
    for convo in qs:
        convo.slack_user_id = convo.slack_user_id or ""
        convo.save()


class Migration(migrations.Migration):
    dependencies = [
        ("bots", "0039_botintegration_slack_read_receipt_msg"),
    ]

    operations = [
        migrations.RemoveIndex(
            model_name="conversation",
            name="bots_conver_bot_int_a83907_idx",
        ),
        migrations.RemoveField(
            model_name="message",
            name="wa_msg_id",
        ),
        migrations.AddField(
            model_name="botintegration",
            name="slack_channel_name",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Bot's Public Slack channel name without # (only for display)",
            ),
        ),
        migrations.AddField(
            model_name="botintegration",
            name="slack_create_personal_channels",
            field=models.BooleanField(
                default=False,
                help_text="If set, the bot will create a personal channel for each user in the public channel",
            ),
        ),
        migrations.AddField(
            model_name="botintegration",
            name="slack_team_id",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Bot's Slack team id (mandatory)",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="botintegration",
            name="slack_team_name",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Bot's Slack team/workspace name (only for display)",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="slack_channel_id",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="Slack channel id, can be different than the bot integration's public channel (mandatory)",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="slack_channel_is_personal",
            field=models.BooleanField(
                default=False,
                help_text="Whether this is a personal slack channel between the bot and the user",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="slack_channel_name",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Bot's Slack channel name without # (only for display)",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="slack_team_id",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="Slack team id - redundant with bot integration (mandatory)",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="slack_user_name",
            field=models.TextField(
                blank=True,
                default="",
                help_text="User's name in slack (only for display)",
            ),
        ),
        migrations.AddField(
            model_name="message",
            name="platform_msg_id",
            field=models.TextField(
                blank=True, default="", help_text="The platform's delivered message id"
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="fb_page_access_token",
            field=models.TextField(
                blank=True,
                default="",
                editable=False,
                help_text="Bot's Facebook page access token (mandatory)",
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="fb_page_id",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Bot's Facebook page id (mandatory)",
                max_length=256,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="ig_account_id",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Bot's Instagram account id (mandatory)",
                max_length=256,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="slack_access_token",
            field=models.TextField(
                blank=True,
                default="",
                editable=False,
                help_text="Bot's Slack access token (mandatory)",
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="slack_channel_hook_url",
            field=models.TextField(
                blank=True,
                default="",
                help_text="Bot's Slack channel hook url (mandatory)",
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="slack_channel_id",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Bot's Public Slack channel id (mandatory)",
                max_length=256,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="botintegration",
            name="wa_phone_number_id",
            field=models.CharField(
                blank=True,
                default=None,
                help_text="Bot's WhatsApp phone number id (mandatory)",
                max_length=256,
                null=True,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="conversation",
            name="fb_page_access_token",
            field=models.TextField(
                blank=True,
                default="",
                editable=False,
                help_text="User's Facebook page access token (mandatory)",
            ),
        ),
        migrations.AlterField(
            model_name="conversation",
            name="fb_page_id",
            field=models.TextField(
                blank=True,
                db_index=True,
                default="",
                help_text="User's Facebook page id (mandatory)",
            ),
        ),
        migrations.AlterField(
            model_name="conversation",
            name="slack_user_id",
            field=models.TextField(
                blank=True,
                default=None,
                help_text="User's Slack ID (mandatory)",
                max_length=256,
                null=True,
            ),
        ),
        migrations.RunPython(
            forwards_func,
            backwards_func,
        ),
        migrations.AlterUniqueTogether(
            name="botintegration",
            unique_together={("slack_channel_id", "slack_team_id")},
        ),
        migrations.AlterUniqueTogether(
            name="conversation",
            unique_together={("slack_channel_id", "slack_user_id", "slack_team_id")},
        ),
        migrations.AddIndex(
            model_name="conversation",
            index=models.Index(
                fields=[
                    "bot_integration",
                    "slack_user_id",
                    "slack_team_id",
                    "slack_channel_is_personal",
                ],
                name="bots_conver_bot_int_d2c469_idx",
            ),
        ),
    ]
