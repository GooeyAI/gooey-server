# Generated by Django 5.1.3 on 2024-12-24 07:06

from django.db import migrations, models


def deduplicate_vespa_doc_id(apps, schema_editor):
    EmbeddingsReference = apps.get_model("embeddings", "EmbeddingsReference")
    db_alias = schema_editor.connection.alias
    objects = EmbeddingsReference.objects.using(db_alias)

    # 1. Find all vespa_doc_ids that have duplicates
    duplicate_doc_ids = (
        objects.values_list("vespa_doc_id",flat=True)
        .annotate(count=models.Count("id"))
        .filter(count__gt=1)
    )

    # 2. For each duplicate group, keep only the latest (by updated_at)
    for doc_id in duplicate_doc_ids:
        # Order by -updated_at so the first item is the latest
        duplicate_refs = objects.filter(vespa_doc_id=doc_id).order_by("-updated_at")
        to_keep = duplicate_refs.first()
        
        # Delete everything else in the group
        duplicate_refs.exclude(pk=to_keep.pk).delete()


class Migration(migrations.Migration):

    dependencies = [
        (
            "embeddings",
            "0002_embeddedfile_created_by_embeddedfile_last_query_at_and_more",
        ),
    ]

    operations = [
        migrations.RunPython(deduplicate_vespa_doc_id, None),
        migrations.AlterField(
            model_name="embeddingsreference",
            name="vespa_doc_id",
            field=models.CharField(
                help_text="The Document ID of this embedding in Vespa. A hash of the file metadata + the split snippet.",
                max_length=256,
                unique=True,
            ),
        ),
    ]
